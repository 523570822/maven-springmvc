<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 管理器，必须设置 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 拦截到，跳转到的地址,通过此地址去认证 -->
        <property name="loginUrl" value="/admin/login" />
        <!-- 认证成功统一跳转到/admin/index.do，建议不配置，shiro认证成功自动到上一个请求路径 -->
        <property name="successUrl" value="/admin/index" />
        <!-- 通过unauthorizedUrl指定没有权限操作时跳转页面 -->
        <property name="unauthorizedUrl" value="/refuse.jsp" />
        <!-- 自定义filter，可用来更改默认的表单名称配置 -->
        <property name="filters">
            <map>
                <!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中 -->
                <entry key="authc" value-ref="formAuthenticationFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>

                <!-- 对静态资源设置匿名访问 -->
               <!-- /images/** = anon
                /js/** = anon
                /css/** = anon-->
                /stat.jsp = anon
                /open/** = anon
                /statics/**  = anon
                /styles/** = anon
                <!--接口文档开放-->
                /swagger-resources/** =anon
                /swagger-ui.html = anon

                /area/** = anon
                /v2/** = anon
                /docs.html = anon
                /webjars/** = anon
                /webjars/js/** = anon
                <!-- 验证码，可匿名访问 -->
                /validatecode.jsp = anon
                <!-- 请求 logout.do地址，shiro去清除session -->
                /admin/logout.do = logout
                <!--商品查询需要商品查询权限 ，取消url拦截配置，使用注解授权方式 -->
                <!-- /items/queryItems.action = perms[item:query] /items/editItems.action
                 = perms[item:edit] -->
                <!-- 配置记住我或认证通过可以访问的地址 -->
                /welcome.jsp = user

                /admin/index.do = user
                <!-- /** = authc 所有url都必须认证通过才可以访问 -->
                /** = authc
            </value>
        </property>
    </bean>



    <!-- Realm实现 -->

    <!-- securityManager安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customRealm" />
        <!-- 注入缓存管理器 -->
        <property name="cacheManager" ref="cacheManager" />
        <!-- 注入session管理器 -->
      <property name="sessionManager" ref="sessionManager" />
        <!-- 记住我 -->
        <property name="rememberMeManager" ref="rememberMeManager" />
    </bean>

    <bean id="customRealm" class="com.springmvc.common.core.shiro.token.CustomRealm">
        
<property name="credentialsMatcher"  ref="credentialsMatcher"></property>

    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!-- 选用MD5散列算法 -->
        <property name="hashAlgorithmName" value="md5" />
        <!-- 进行一次加密 -->
       <property name="hashIterations" value="2" />
        <!--表示是否存储散列后的密码为16进制，需要和生成密码时的一样。-->
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean>



    <!-- 自定义form认证过虑器 -->
    <!-- 基于Form表单的身份验证过滤器，不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值，建议配置 -->
    <!-- 可通过此配置，判断验证码 -->
<!--    <bean id="formAuthenticationFilter"
          class="com.zhijianj.stucheck.shiro.CustomFormAuthenticationFilter ">
        &lt;!&ndash; 表单中账号的input名称,默认为username &ndash;&gt;
        <property name="usernameParam" value="username" />
        &lt;!&ndash; 表单中密码的input名称,默认为password &ndash;&gt;
        <property name="passwordParam" value="password" />
        &lt;!&ndash; 记住我input的名称,默认为rememberMe &ndash;&gt;
        <property name="rememberMeParam" value="rememberMe" />
    </bean>-->
    <!--扩展表单认证过滤器-->
    <bean id="formAuthenticationFilter" class="com.springmvc.common.core.shiro.token.CustomFormAuthenticationFilter">

        <!-- 表单中账号的input名称 -->
        <property name="usernameParam" value="username" />
        <!-- 表单中密码的input名称 -->
        <property name="passwordParam" value="password" />
        <property name="rememberMeParam" value="rememberMe" />
    </bean>

    <!-- 会话管理器 -->
   <!-- <bean id="sessionManager"
          class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        &lt;!&ndash; session的失效时长，单位毫秒 &ndash;&gt;
        <property name="globalSessionTimeout" value="600000" />
        &lt;!&ndash; 删除失效的session &ndash;&gt;
        <property name="deleteInvalidSessions" value="true" />
    </bean>-->
    <!-- 会话管理器 -->
    <bean id="sessionManager"
          class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="18000000"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
      <!--  <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>-->
    </bean>
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator"
          class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话DAO -->
    <bean id="sessionDAO"
          class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>
    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="18000000"/>
    </bean>
    <!-- 会话验证调度器 -->
   <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="18000000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>


    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:spring/shiro-ehcache.xml" />
    </bean>
    <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie" />
    </bean>
    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- rememberMe是cookie的名字 -->
        <constructor-arg value="rememberMe" />
        <!-- 记住我cookie生效时间30天 -->
        <property name="maxAge" value="2592000" />
    </bean>
</beans>